- content_for :head do
  = stylesheet_link_tag "new_structure/section/brands"

  - if params[:category] == "curves"
    %meta{property: "og:title", content: facebook_title(params[:category])}/
    %meta{property: "og:description", content: facebook_description(params[:category])}/
    %meta{property:"og:image", content:"http://d22zjnmu4464ds.cloudfront.net/assets/home/olook-5c5edb27a8d142a5e4b9db909c5bfbde.jpg"}/
    %meta{property:"og:url", content:"#{root_url}#{params[:category]}"}/
    %meta{property:"og:site_name", content:"Olook"}/
    %meta{property: "og:type", content:"website"}/
    %meta{property:"fb:app_id", content:"#{@facebook_app_id}"}  

  %meta{:content => @chaordic_user, :name => "chaordic:user"}/

- content_for :data_layer do
  =# render "shared/metrics/sociomantic/category"

- content_for :footer do
  :javascript
    start_position = #{@search.range_values_for(:price)[:min] rescue 0};
    final_position = #{@search.range_values_for(:price)[:max] rescue 600};
  = javascript_include_tag 'section/brands'
  = javascript_include_tag "section/load_thumbnail_images"
= render "shared/mkt_breadcrumb"
= cache @search.cache_key, expire_in: 30.minutes  do
  = brand_breadcrumbs_for(@brand.first) if @brand.any?
  #catalog
    = render "side_filters", search: @search

    #result
      - unless @search.has_any_filter_selected?
        / local onde o viewpersonalized será exibido
        .chaordic.viewpersonalized
        / local onde o purchasepersonalized será exibido
        .chaordic.purchasepersonalized
        / local onde o mostpopular será exibido
        .chaordic.mostpopular

      - if @brand = @brand.first
        - if @brand.header_image.present?
          %div.collections_header
            = image_tag(@brand.header_image, alt: @brand.header_image_alt, title: @brand.header_image_alt) if @brand

      = render "ordenation_filters", search: @search, url_builder: @url_builder

      %section.container_product
        %ul#products
          = render_highlighted_products_from(@campaign)
          = render "shared/searched_products", :products => @search.products
        %br{style:'clear:both;'}
        .loading
      .pagination
        = render "shared/nav_bar_pagination", search: @search, url_builder: @url_builder, link: lambda{ |hash| @url_builder.current_filters{ |_p| _p.merge(hash) } }

#filters_container
  .filter
    = form_tag collection_theme_path(params[:collection_theme], @url_builder.current_filters), method: 'get' do
      %fieldset.first_child
        %span.selected-type{ class: ("filter_selected" if params[:category].present?) }= params[:category].present? ? params[:category].pluralize : "VER TUDO"
        - categories =  [["Ver Tudo", collection_theme_path(params[:collection_theme])]] | filters_by("category", search, use_fields: [:collection_theme]).map{|text, amount| [text.titleize.pluralize, collection_theme_path(parameters: text.singularize)]}
        = select_tag('', options_for_select(categories, selected:collection_theme_path("#{ params[:collection_theme]}/#{ params[:category]}")), :onchange => ("location = this.options[this.selectedIndex].value;"))

      %fieldset
        %span.selected-type.order{ class: ("filter_selected" if params[:por].present?) }= params[:por].present? ? params[:por].gsub("-", " ").titleize : "NOSSA SELEÇÃO"
        = select_tag('por', options_for_select({"Nossa Seleção" => 0, "Menor Preço" => "menor-preco", "Maior Preço" => "maior-preco", "Maior Desconto" => "maior-desconto"}, :selected => params[:por]), :class => "custom_select", :onchange => ("$(this).parents('form').submit();"))
  - if params[:category].present?

    .filter
      %span.selected-type.txt-filter{ class: ("filter_selected" if params[:subcategory].present?) } MODELO
      .tab_bg &nbsp;
      %ul
        - filters_by("subcategory", search, use_fields: [:collection_theme]).each do |text, amount|
          %li= filter_link_to(collection_theme_path(@url_builder.add_filter(:subcategory, text)), text.chomp, search.filter_selected?(:subcategory, text.chomp))
        - if params[:subcategory].present?
          %li.clear_choice= link_to '[limpar]', collection_theme_path(@url_builder.remove_filter_of(:subcategory))

    - unless filters_by("category", search, use_fields: [:collection_theme]).flatten.include? "acessório"
      .filter
        %span.selected-type.txt-filter{ class: ("filter_selected" if params[:size].present?) } TAMANHO
        .tab_bg &nbsp;
        %ul
          - filters_by("size", search, use_fields: [:collection_theme]).each do |text, amount|
            %li= filter_link_to(collection_theme_path(@url_builder.add_filter(:size, text)), text.chomp, search.filter_selected?(:size, text.chomp))
          - if params[:size].present?
            %li.clear_choice= link_to '[limpar]', collection_theme_path(@url_builder.remove_filter_of(:size))

    .filter
      %span.selected-type.txt-filter{ class: ("filter_selected" if params[:color].present?) } COR
      .tab_bg &nbsp;
      %ul.cores
        - filters_by("color", search, use_fields: [:collection_theme]).each do |text, amount|
          %li= filter_link_to(collection_theme_path(@url_builder.add_filter(:color, text)), text.chomp, search.filter_selected?(:color, text.chomp))
        - if params[:color].present?
          %li.clear_choice= link_to '[limpar]', collection_theme_path(@url_builder.remove_filter_of(:color))

  .price-range
    %p#min-value-label{style:'background-image: none'} 0
    %p#max-value-label{style:'background-image: none'} 0
    .slider.horizontal-slider
      #slider-range

    %input{type: "text", id: "min-value"}
    %input{type:"text", id:"max-value"}
    %input{type:"hidden", name:"price", id:"price"}

